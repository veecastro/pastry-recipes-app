"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isJsDom = exports.isDeno = exports.isElectronRenderer = exports.isElectronMain = exports.isElectron = exports.isNode = exports.isWebWorker = exports.isBrowser = void 0;
function isBrowser() {
    return hasWindow() && hasDocument();
}
exports.isBrowser = isBrowser;
function isWebWorker() {
    return false;
}
exports.isWebWorker = isWebWorker;
function isNode() {
    return hasGlobal();
}
exports.isNode = isNode;
function isElectron() {
    return isElectronMain() || isElectronRenderer();
}
exports.isElectron = isElectron;
function isElectronMain() {
    try {
        return Object.keys(process.versions).some(key => key === 'electron');
    }
    catch (e) {
        return false;
    }
}
exports.isElectronMain = isElectronMain;
function isElectronRenderer() {
    try {
        return /electron/i.test(navigator.userAgent);
    }
    catch (e) {
        return false;
    }
}
exports.isElectronRenderer = isElectronRenderer;
function isDeno() {
    try {
        return typeof Deno === 'object' && !!Deno.pid;
    }
    catch (e) {
        return false;
    }
}
exports.isDeno = isDeno;
function isJsDom() {
    try {
        return hasWindow() && navigator.userAgent.includes('jsdom');
    }
    catch (e) {
        return false;
    }
}
exports.isJsDom = isJsDom;
function hasGlobal() {
    return new Function('try {return this===global}catch(e){ return false}')();
}
function hasWindow() {
    return new Function('try {return this===window}catch(e){ return false}')();
}
function hasDocument() {
    return new Function('try {return this.document !== undefined}catch(e){ return false}')();
}
//# sourceMappingURL=index.js.map