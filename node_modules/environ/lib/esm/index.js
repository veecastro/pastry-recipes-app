export function isBrowser() {
    return hasWindow() && hasDocument();
}
export function isWebWorker() {
    return false;
}
export function isNode() {
    return hasGlobal();
}
export function isElectron() {
    return isElectronMain() || isElectronRenderer();
}
export function isElectronMain() {
    try {
        return Object.keys(process.versions).some(key => key === 'electron');
    }
    catch (e) {
        return false;
    }
}
export function isElectronRenderer() {
    try {
        return /electron/i.test(navigator.userAgent);
    }
    catch (e) {
        return false;
    }
}
export function isDeno() {
    try {
        return typeof Deno === 'object' && !!Deno.pid;
    }
    catch (e) {
        return false;
    }
}
export function isJsDom() {
    try {
        return hasWindow() && navigator.userAgent.includes('jsdom');
    }
    catch (e) {
        return false;
    }
}
function hasGlobal() {
    return new Function('try {return this===global}catch(e){ return false}')();
}
function hasWindow() {
    return new Function('try {return this===window}catch(e){ return false}')();
}
function hasDocument() {
    return new Function('try {return this.document !== undefined}catch(e){ return false}')();
}
//# sourceMappingURL=index.js.map